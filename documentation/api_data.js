define({ "api": [  {    "type": "post",    "url": "/api/confirm",    "title": "02 - Confirm registration",    "name": "Confirm_registration",    "group": "Authentication",    "description": "<p>Api endpoint that confirms registration of the new user</p>",    "version": "0.0.1",    "parameter": {      "fields": {        "Body": [          {            "group": "Body",            "type": "String",            "optional": false,            "field": "confirmationToken",            "description": "<p>token</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>A success message</p>"          }        ]      }    },    "error": {      "fields": {        "Bad request 400": [          {            "group": "Bad request 400",            "type": "String",            "optional": false,            "field": "REGISTRATION_NO_CONFIRMATION_TOKEN",            "description": "<p>Happens when no token is provided</p>"          }        ],        "Not found 404": [          {            "group": "Not found 404",            "type": "String",            "optional": false,            "field": "CONFIRMATION_USER_NOT_FOUND",            "description": "<p>Happens when no user is found</p>"          }        ],        "Internal server error 500": [          {            "group": "Internal server error 500",            "type": "String",            "optional": false,            "field": "UNKNOWN_SERVER_ERROR",            "description": "<p>Happens when the operation failed for unknown reasons on the database. Should not happen in normal circumstances</p>"          }        ]      }    },    "filename": "app/api/authentication/registration/post/confirm-registration/registration.route.js",    "groupTitle": "Authentication"  },  {    "type": "post",    "url": "/api/login",    "title": "01 - Log in",    "name": "Login",    "group": "Authentication",    "description": "<p>Api endpoint that logs in the user</p>",    "version": "0.0.1",    "parameter": {      "fields": {        "Body": [          {            "group": "Body",            "type": "String",            "size": "128",            "optional": false,            "field": "email",            "description": "<p>Username</p>"          },          {            "group": "Body",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>Password</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "ks-security",            "description": "<p>token that is used to identify the user later on</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "user",            "description": "<p>User model</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "user.id",            "description": "<p>User ID</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "user.firstName",            "description": "<p>User first name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "user.lastName",            "description": "<p>User last name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "user.email",            "description": "<p>User email</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "user.roleId",            "description": "<p>User roleId</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "user.roleName",            "description": "<p>User roleName</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n   \"ks-security\": \"4576e411521fdbface9fbf0f3ced54ac71732732984d723e42bd22e10b51401659411feed3ed61db312cb2fe38aa3ebcdfb85afcf400e57696ef0a06e0f49c5a\",\n   \"user\": {\n       \"id\": 1,\n       \"firstName\": \"Test\",\n       \"lastName\": \"Test\",\n       \"email\": \"test@test.com\",\n       \"roleId\": 1,\n       \"roleName\": \"administrator\"\n   }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Bad request 400": [          {            "group": "Bad request 400",            "type": "String",            "optional": false,            "field": "LOGIN_INVALID_DETAILS",            "description": "<p>Happens when body does not contain username and password only</p>"          },          {            "group": "Bad request 400",            "type": "String",            "optional": false,            "field": "LOGIN_INVALID_USERNAME",            "description": "<p>Happens when invalid username is provided (Should be a String not bigger than 32 characters)</p>"          },          {            "group": "Bad request 400",            "type": "String",            "optional": false,            "field": "LOGIN_NO_PASSWORD",            "description": "<p>Happens when no password is provided</p>"          }        ],        "Not found 404": [          {            "group": "Not found 404",            "type": "String",            "optional": false,            "field": "LOGIN_NO_USER_FOUND",            "description": "<p>Happens when there is no user with given username and password</p>"          }        ],        "Forbidden 403": [          {            "group": "Forbidden 403",            "type": "String",            "optional": false,            "field": "LOGIN_USER_NOT_VERIFIED",            "description": "<p>Happens when the user provided correct credentials but did not confirm their email</p>"          }        ],        "Internal server error 500": [          {            "group": "Internal server error 500",            "type": "String",            "optional": false,            "field": "UNKNOWN_DATABASE_ERROR",            "description": "<p>Happens when the operation failed for unknown reasons on the database. Should not happen in normal circumstances</p>"          }        ]      }    },    "filename": "app/api/authentication/login/post/login.route.js",    "groupTitle": "Authentication"  },  {    "type": "post",    "url": "/api/registration",    "title": "01 - Registration",    "name": "Registration",    "group": "Authentication",    "description": "<p>Api endpoint that registers new user</p>",    "version": "0.0.1",    "parameter": {      "fields": {        "Body": [          {            "group": "Body",            "type": "String",            "size": "128",            "optional": false,            "field": "firstName",            "description": "<p>First name</p>"          },          {            "group": "Body",            "type": "String",            "size": "128",            "optional": false,            "field": "lastName",            "description": "<p>Last name</p>"          },          {            "group": "Body",            "type": "String",            "size": "32",            "optional": false,            "field": "email",            "description": "<p>Email</p>"          },          {            "group": "Body",            "type": "UUID",            "optional": false,            "field": "roleId",            "description": "<p>Role id</p>"          },          {            "group": "Body",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>Password</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>A success message</p>"          }        ]      }    },    "error": {      "fields": {        "Bad request 400": [          {            "group": "Bad request 400",            "type": "String",            "optional": false,            "field": "REGISTRATION_INVALID_DETAILS",            "description": "<p>Happens when body does not contain only the necessary data</p>"          },          {            "group": "Bad request 400",            "type": "String",            "optional": false,            "field": "REGISTRATION_INVALID_FIRST_NAME",            "description": "<p>Happens when invalid first name is provided (Should be a String not bigger than 128 characters)</p>"          },          {            "group": "Bad request 400",            "type": "String",            "optional": false,            "field": "REGISTRATION_INVALID_LAST_NAME",            "description": "<p>Happens when invalid last name is provided (Should be a String not bigger than 128 characters)</p>"          },          {            "group": "Bad request 400",            "type": "String",            "optional": false,            "field": "REGISTRATION_INVALID_ROLE_ID",            "description": "<p>Happens when invalid role id is provided - should be a positive integer</p>"          },          {            "group": "Bad request 400",            "type": "String",            "optional": false,            "field": "REGISTRATION_FAILED_NO_SUCH_ROLE",            "description": "<p>Happens when role id does not exist in database</p>"          },          {            "group": "Bad request 400",            "type": "String",            "optional": false,            "field": "REGISTRATION_CANNOT_BE_ADMINISTRATOR",            "description": "<p>Happens when user tries to register with Administrator role ID</p>"          },          {            "group": "Bad request 400",            "type": "String",            "optional": false,            "field": "REGISTRATION_INVALID_EMAIL",            "description": "<p>Happens when invalid email is provided</p>"          },          {            "group": "Bad request 400",            "type": "String",            "optional": false,            "field": "REGISTRATION_NO_PASSWORD",            "description": "<p>Happens when no password is provided</p>"          }        ],        "Conflict 409": [          {            "group": "Conflict 409",            "type": "String",            "optional": false,            "field": "REGISTRATION_FAILED_USER_ALREADY_REGISTERED",            "description": "<p>Happens when user is already registered</p>"          }        ],        "Internal server error 500": [          {            "group": "Internal server error 500",            "type": "String",            "optional": false,            "field": "UNKNOWN_SERVER_ERROR",            "description": "<p>Happens when the operation failed for unknown reasons on the database. Should not happen in normal circumstances</p>"          }        ]      }    },    "filename": "app/api/authentication/registration/post/new-user/registration.route.js",    "groupTitle": "Authentication"  },  {    "type": "get",    "url": "/api/categories/",    "title": "01 - List existing categories on server",    "name": "Get_categories",    "group": "Category",    "description": "<p>Api endpoint that fetches categories from the server.</p>",    "version": "0.0.1",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "roles",            "description": "<p>Array of roles</p>"          },          {            "group": "Success 200",            "type": "Integer",            "optional": false,            "field": "roles.id",            "description": "<p>The ID</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "roles.name",            "description": "<p>Name od the role</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": " {\n    \"categories\": [\n        {\n            \"id\": \"2c3e12d2-2311-4ecd-8b30-07ab05d02031\",\n            \"name\": \"10+ inch\"\n        },\n        {\n            \"id\": \"28414aae-0e7a-4e50-bad0-43e034eef16d\",\n            \"name\": \"18-19 years\"\n        },\n        .\n        .\n        .\n        .\n\n        {\n            \"id\": \"77a41ccf-19bc-4f07-8571-c0e5d4ba2e43\",\n            \"name\": \"Young\"\n        }\n    ]\n}",          "type": "json"        }      ]    },    "filename": "app/api/categories/get/all/categories.route.js",    "groupTitle": "Category"  },  {    "type": "get",    "url": "/api/roles/",    "title": "01 - List existing roles on server",    "name": "Get_roles",    "group": "Role",    "description": "<p>Api endpoint that fetches roles from the server.</p>",    "version": "0.0.1",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "roles",            "description": "<p>Array of roles</p>"          },          {            "group": "Success 200",            "type": "Integer",            "optional": false,            "field": "roles.id",            "description": "<p>The ID</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "roles.name",            "description": "<p>Name od the role</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": " {\n    \"roles\": [\n        {\n            \"id\": \"ad34041d-4c06-49b6-831a-55bca296d8ac\",\n            \"name\": \"administrator\"\n        },\n        {\n            \"id\": \"a0ee7a6d-4348-41a5-b1b9-39e66dbbe32a\",\n            \"name\": \"user\"\n        }\n    ]\n}",          "type": "json"        }      ]    },    "filename": "app/api/roles/get/all/roles.route.js",    "groupTitle": "Role"  }] });
